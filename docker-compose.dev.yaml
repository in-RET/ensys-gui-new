services:
  db:
    image: postgres:17-alpine
    container_name: db
    env_file: .env.dev
    restart: always
    ports:
      - "5432:5432"
    networks:
      - ensys
    volumes:
      - ./storage/db:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    env_file: .env.dev
    restart: always
    networks:
      - ensys
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ./storage/pgadmin:/var/lib/pgadmin
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/dockerfile.dev
    container_name: frontend-dev
    env_file: .env.dev
    command: sh -c "npm start"
    working_dir: /app
    restart: no
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules/
    ports:
      - "${WEB_PORT}:4200"
    networks:
      - ensys
    depends_on:
      - db

  backend:
    build:
      context: backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: backend-dev
    env_file: .env.dev
    command: sh -c "alembic upgrade head && python -m uvicorn app.main:fastapi_app --host 0.0.0.0 --port 8001"
    ports:
      - '${API_PORT}:8001'
    restart: no
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./backend/templates:/backend/templates
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
    networks:
      - ensys
    depends_on:
      - db
      - flower
      - celery

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    env_file: .env.dev
    command: [ "redis-server", "--bind", "redis", "--port", "${REDIS_PORT}" ]
    networks:
      - ensys
    volumes:
      - cache:/data

  celery:
    build:
      context: ./backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: celery-dev
    env_file: .env.dev
    command: celery --app=app.celery.celery_app worker --concurrency=4 -E -n docker-develop@localhost --loglevel=INFO
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
      - ${GUROBI_LICENSE_FILE_PATH}:/backend/gurobi.lic
    networks:
      - ensys
    depends_on:
      - redis

  flower:
    build:
      context: ./backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: flower-dev
    env_file: .env.dev
    command: celery --app=app.celery.celery_app flower --port=5555
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
    ports:
      - "${FLOWER_PORT}:5555"
    networks:
      - ensys
    depends_on:
      - redis

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - '${MONITORING_PORT}:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    networks:
      - ensys

#  mkdocs:
#    build:
#      context: ./docs/config
#      dockerfile: dockerfile
#    container_name: documentation
#    command: "serve --config-file /docs/config/mkdocs.yaml -a 0.0.0.0:8000"
#    #working_dir: /docs/config
#    ports:
#      - "${MKDOCS_PORT}:8000"
#    volumes:
#      - ./docs:/docs
#      - ./backend:/backend
#      - ./ensys:/ensys

networks:
  ensys:

volumes:
  static_volume:
  node_modules:
  cache:
  grafana_storage:
