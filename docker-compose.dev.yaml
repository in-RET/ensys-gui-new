services:
    db:
        image: postgres:16
        container_name: db
        env_file: .env
        restart: always
        ports:
            - "5432:5432"
        networks:
            - ensys
        volumes:
            - ./data/db:/var/lib/postgresql/data

    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin
        env_file: .env
        restart: always
        networks:
            - ensys
        ports:
            - "${PGADMIN_PORT}:80"
        volumes:
            - ./data/pgadmin:/var/lib/pgadmin

    frontend:
        build:
          context: frontend
          dockerfile: dockerfile
        container_name: frontend
        env_file: .env
        working_dir: /app
        command: sh -c "npm start"
        volumes:
            - ./frontend:/app
            - node_modules:/app/node_modules
        restart: always
        ports:
          - "${WEB_PORT}:4200"
        networks:
          - ensys
        depends_on:
          - db

    backend:
        build:
          context: ./backend
          dockerfile: dockerfile
        container_name: backend
        env_file: .env
        command: sh -c "alembic upgrade head && python -m uvicorn app.main:app --host 0.0.0.0 --port 8001"
        ports:
          - '${API_PORT}:8001'
        restart: always
        volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ${LOCAL_DATADIR}:/app/data/simulations
        depends_on:
          - db
        networks:
          - ensys

#  proxy:
#    build: ./proxy
#    container_name: gui_proxy
#    restart: always
#    ports:
#        - ${PROXY_PORT}:80
#    depends_on:
#        - web
#    volumes:
#        - static_volume:/static
#    networks:
#        - backend
#        - frontend

networks:
    ensys:

volumes:
    static_volume:
    node_modules:
