"""init

Revision ID: 61bfaa2d0d60
Revises: 
Create Date: 2025-09-11 13:38:33.047121

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '61bfaa2d0d60'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('mail', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_joined', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=40), nullable=False),
    sa.Column('unit_energy', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('unit_co2', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=8), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('time_steps', sa.Integer(), nullable=True),
    sa.Column('interval', sa.Float(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('modeling_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('energysystem', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sim_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('status_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('simulations')
    op.drop_table('scenarios')
    op.drop_table('projects')
    op.drop_table('users')
    # ### end Alembic commands ###
