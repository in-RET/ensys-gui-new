"""added components

Revision ID: 846f48d6db25
Revises: 596ec7663cce
Create Date: 2025-04-10 15:16:40.600057

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '846f48d6db25'
down_revision: Union[str, None] = '596ec7663cce'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('components_in_design',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('oemof_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('pos_x', sa.Float(), nullable=False),
    sa.Column('pos_y', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    components_table = op.create_table('components_template',
    sa.Column('oemof_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('fields', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('components')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###
    op.bulk_insert(components_table, [
        {'oemof_type': 'sink', 'fields': {'label': 'string', 'inputs': 'flow'}},
        {'oemof_type': 'source', 'fields': {'label': 'string', 'outputs': 'flow'}},
        {'oemof_type': 'converter', 'fields': {'label': 'string', 'inputs': 'flow', 'outputs': 'flow', 'conversion_factors': 'dict'}},
        {'oemof_type': 'offsetconverter', 'fields': {'label': 'string', 'inputs': 'flow', 'outputs': 'flow', 'conversion_factors': 'dict', 'normed_offsets': 'dict', 'coefficients': 'list'}},
        {'oemof_type': 'bus', 'fields': {'label': 'string', 'balanced': 'boolean'}},
        {'oemof_type': 'genericStorage', 'fields': {'label': 'string', 'inputs': 'flow', 'outputs': 'flow', 'nominal_storage_capacity': 'float or invest', 'initial_storage_level': 'float', 'invest_relation_input_output': 'float', 'invest_relation_input_capacity': 'float', 'invest_relation_output_capacity': 'float', 'min_storage_level': 'float', 'max_storage_level': 'float', 'balanced': 'boolean', 'loss_rate': 'float', 'fixed_losses_relative': 'float', 'fixed_losses_absolute': 'float', 'inflow_conversion_factor': 'float', 'outflow_conversion_factor': 'float', 'fixed_costs': 'float', 'storage_costs': 'float', 'lifetime_inflow': 'float', 'lifetime_outflow': 'float'}},
        {'oemof_type': 'flow', 'fields': {'Label': 'string', 'age': 'integer', 'bidirectional': 'boolean', 'fix': 'float or list[float]', 'fixed_costs': 'float or list[float]', 'full_load_time_max': 'float', 'full_load_time_min': 'float', 'integer': 'boolean', 'lifetime': 'integer', 'max': 'float or list[float]', 'min': 'float or list[float]', 'negative_gradient_limit': 'float or list[float]', 'nominal_value': 'float or investment', 'nonconvex': 'nonconvex object', 'positive_gradient_limit': 'float or list[float]', 'variable_costs': 'float or list[float]'}},
        {'oemof_type': 'investment', 'fields': {'age': 'int', 'ep_costs': 'float', 'existing': 'float', 'fixed_costs': 'float or list[float]', 'interest_rate': 'float', 'lifetime': 'int', 'maximum': 'float', 'minimum': 'float', 'nonconvex': 'boolean', 'offset': 'float', 'overall_maximum': 'float', 'overall_minimum': 'float'}},
        {'oemof_type': 'nonconvex', 'fields': {'activity_costs': 'float or list[float]', 'inactivity_costs': 'float or list[float]', 'initial_status': 'boolean', 'maximum_shutdowns': 'integer', 'maximum_startups': 'integer', 'minimum_downtime': 'integer', 'minimum_uptime': 'integer', 'negative_gradient_limit': 'float or list[float]', 'positive_gradient_limit': 'float or list[float]', 'shutdown_costs': 'float or list[float]', 'startup_costs': 'float or list[float]'}}
    ])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_table('components',
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('oemof_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('fields', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='components_pkey')
    )
    op.drop_table('components_template')
    op.drop_table('components_in_design')
    # ### end Alembic commands ###
