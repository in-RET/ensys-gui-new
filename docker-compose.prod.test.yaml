services:
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/dockerfile.prod
    container_name: ensys-new-frontend
    env_file: .env.test
    restart: no
    networks:
      - frontend

  backend:
    build:
      context: backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: ensys-new-backend
    env_file: .env.test
    command: sh -c "alembic upgrade head && uvicorn app.main:fastapi_app --forwarded-allow-ips="*" --host 0.0.0.0 --port 8001"
    restart: no
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./backend/templates:/backend/templates
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
    networks:
      - backend
    depends_on:
      - flower
      - celery

  redis:
    image: redis:alpine
    container_name: ensys-new-redis
    restart: always
    env_file: .env.test
    command: [ "redis-server", "--bind", "redis", "--port", "${REDIS_PORT}" ]
    networks:
      - backend
    volumes:
      - cache:/data

  celery:
    build:
      context: ./backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: ensys-new-celery
    env_file: .env.test
    command: celery --app=app.celery.celery_app worker --concurrency=4 -E -n docker-develop@localhost --loglevel=INFO
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./backend/templates:/backend/templates
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
      - ${GUROBI_LICENSE_FILE_PATH}:/backend/gurobi.lic
    networks:
      - backend
    depends_on:
      - redis

  flower:
    build:
      context: ./backend
      dockerfile: docker/dockerfile
      args:
        os_version: ${OS_VERSION}
    container_name: ensys-new-flower
    env_file: .env.test
    command: celery --app=app.celery.celery_app flower --port=8002
    volumes:
      - ./backend/app:/backend/app
      - ./backend/data:/backend/data
      - ./ensys:/backend/ensys
      - ${HOST_DATADIR}:${LOCAL_DATADIR}
    ports:
      - "${FLOWER_PORT}:8002"
    networks:
      - backend
    depends_on:
      - redis

  proxy:
    build:
      context: ./proxy
      dockerfile: dockerfile
    container_name: ensys-new-proxy
    restart: always
    ports:
      - "${PROXY_PORT}:80"
    networks:
      - frontend
      - backend
    depends_on:
      - frontend
      - backend

networks:
  frontend:
  backend:

volumes:
  static_volume:
  node_modules:
  cache:
